/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_fly_sky;

import com.sun.xml.internal.fastinfoset.EncodingConstants;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SHAFIN
 */
public class SearchForFlight extends javax.swing.JFrame {

    /**
     * Creates new form SrachForFlight
     */
    public SearchForFlight() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        way = new javax.swing.ButtonGroup();
        classs_ = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        business = new javax.swing.JRadioButton();
        economy = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Search For Flight");

        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 768));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Search For Flight");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(90, 90, 536, 50);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Departure City");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(60, 160, 150, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Departure Date");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(60, 220, 150, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Arrival City");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(60, 260, 150, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Total No Of Ticket");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(60, 360, 150, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Class");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(60, 310, 150, 30);
        jPanel1.add(jTextField1);
        jTextField1.setBounds(300, 160, 280, 30);
        jPanel1.add(jTextField3);
        jTextField3.setBounds(300, 260, 280, 30);

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField6);
        jTextField6.setBounds(300, 360, 280, 30);

        classs_.add(business);
        business.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        business.setText("Business");
        business.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                businessActionPerformed(evt);
            }
        });
        jPanel1.add(business);
        business.setBounds(300, 310, 85, 25);

        classs_.add(economy);
        economy.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        economy.setText("Economy");
        jPanel1.add(economy);
        economy.setBounds(450, 310, 89, 25);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 51));
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(330, 460, 107, 34);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airline Id", "Airline Name", "Departure City", "Departure date", "Departure Time", "Arrival City", "Journey Time", "Transit City", "Total Transit Hr", "Fare"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setHeaderValue("Airline Id");
            jTable2.getColumnModel().getColumn(6).setHeaderValue("Journey Time");
            jTable2.getColumnModel().getColumn(8).setHeaderValue("Total Transit Hr");
        }

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(0, 530, 840, 110);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Available Seats");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(990, 440, 190, 30);
        jPanel1.add(jDateChooser1);
        jDateChooser1.setBounds(300, 210, 280, 30);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seat Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(970, 530, 240, 110);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airline Name", "Departure City", "Departure date", "Departure Time", "Arrival City", "Transit City", "Seat Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(660, 160, 600, 110);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(51, 51, 51));
        jButton3.setText("Confirm Ticket");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(690, 100, 200, 34);

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField7);
        jTextField7.setBounds(300, 410, 280, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Buyer Id");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(60, 410, 150, 30);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(51, 51, 51));
        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(20, 10, 100, 34);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Search Result");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(0, 480, 200, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void businessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_businessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_businessActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String DepartureCityName, DepartureDate, ArrivalCityName, ArrivalDate, WayType, ClassName;
            int TicketAmount;
            DepartureCityName = jTextField1.getText();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
            DepartureDate = sdf.format(jDateChooser1.getDate());
            System.out.println(DepartureDate);
            ArrivalCityName = jTextField3.getText();
            ArrivalDate = "";
            TicketAmount = Integer.parseInt(jTextField6.getText());

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager
                    .getConnection(
                            "jdbc:sqlserver://localhost:1971;databaseName=afly;selectMethod=cursor", "sa", "123456");
            System.out.println("DATABASE NAME IS:"
                    + connection.getMetaData().getDatabaseProductName());

            if (business.isSelected()) {
                Statement statement = connection.createStatement();

                String query = "select distinct businessclass.airlineid, Airline.AirLineName,businessclass.departurecity,businessclass.departuredate,businessclass.departuretime,businessclass.arrivalcity,businessclass.jtime,businessclass.transitcity,businessclass.transittime,businessclass.classbasefare*?\n"
                        + "from\n"
                        + "businessclass inner join Airline\n"
                        + "on businessclass.airlineid=Airline.AirLineId  where DepartureCity=? AND DepartureDate=? AND ArrivalCity=?";

                PreparedStatement st = connection.prepareStatement(query);

                st.setInt(1, TicketAmount);
                st.setString(2, DepartureCityName);
                st.setString(3, DepartureDate);
                st.setString(4, ArrivalCityName);

                ResultSet rs = null;
                rs = st.executeQuery();

                while (rs.next()) {

                    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();//SHOWING IN JTABLE
                    model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), DepartureDate, rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10)});
                }

            } else if (economy.isSelected()) {

                Statement statement = connection.createStatement();

                String query = "select distinct EconomyClass.airlineid, Airline.AirLineName,EconomyClass.departurecity,EconomyClass.departuredate,EconomyClass.departuretime,EconomyClass.arrivalcity,EconomyClass.jtime,EconomyClass.transitcity,EconomyClass.transittime,EconomyClass.classbasefare*?\n"
                        + "from\n"
                        + "EconomyClass inner join Airline\n"
                        + "on EconomyClass.airlineid=Airline.AirLineId  where DepartureCity=? AND DepartureDate=? AND ArrivalCity=?";

                PreparedStatement st = connection.prepareStatement(query);

                st.setInt(1, TicketAmount);
                st.setString(2, DepartureCityName);
                st.setString(3, DepartureDate);
                st.setString(4, ArrivalCityName);

                ResultSet rs = null;
                rs = st.executeQuery();

                while (rs.next()) {

                    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();//SHOWING IN JTABLE
                    model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), DepartureDate, rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10)});
                }

            }

        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String DepartureCityName_,
                DepartureDate_,
                DepartureTime_,
                ArrivalCityName_,
                ArrivalDate_,
                ArrivalTime_,
                Jtime_, TransitCity_, TransitTime_,
                AirlineId_,
                RouteId_, Airlinename_, Fare_;

        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        int[] selection = jTable2.getSelectedRows();
        int a = selection.length;

        for (int i = 0; i < a; i++) {

            AirlineId_ = model.getValueAt(selection[i], 0).toString();
            int AirlineId_1 = Integer.parseInt(AirlineId_);
            Airlinename_ = model.getValueAt(selection[i], 1).toString();

            DepartureCityName_ = model.getValueAt(selection[i], 2).toString();
            DepartureDate_ = model.getValueAt(selection[i], 3).toString();
            DepartureTime_ = model.getValueAt(selection[i], 4).toString();
            ArrivalCityName_ = model.getValueAt(selection[i], 5).toString();
            TransitCity_ = model.getValueAt(selection[i], 7).toString();
            TransitTime_ = model.getValueAt(selection[i], 8).toString();
            Fare_ = model.getValueAt(selection[i], 9).toString();
//            ArrivalDate_ = model.getValueAt(selection[i], 6).toString();
//            ArrivalTime_ = model.getValueAt(selection[i], 7).toString();
            if (business.isSelected()) {
                try {
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                    Connection connection = DriverManager
                            .getConnection(
                                    "jdbc:sqlserver://localhost:1971;databaseName=afly;selectMethod=cursor", "sa", "123456");
                    System.out.println("DATABASE NAME IS:"
                            + connection.getMetaData().getDatabaseProductName());
                    Statement statement = connection.createStatement();

                    //            int a = statement.executeUpdate("insert into Buyer values('" + BuyerId + "','" + FirstName + "','" + LastName + "' ,'" + Address + "','" + PassportNumber + "','" + PhoneNumber + "','" + Email + "','" + RequirementName + "')");//INSERT DATA
                    //          String query = "insert into Buyer values(?,?,?,?,?,?,?,?)";
                    String query = "select seatnumber from businessclass where airlineid= ? AND DEPARTURECITY=? AND DEPARTURETIME=? AND DEPARTUREDATE=? AND ARRIVALCITY=? ";
                    //String query="insert into selectticket values(?,?,?,?,?)";
                    PreparedStatement st = connection.prepareStatement(query);
                    st.setInt(1, AirlineId_1);
                    st.setString(2, DepartureCityName_);
                    st.setString(4, DepartureDate_);
                    st.setString(3, DepartureTime_);
                    st.setString(5, ArrivalCityName_);
                    //st.execute();
                    ResultSet rs = null;
                    rs = st.executeQuery();
                    while (rs.next()) {

                        DefaultTableModel model1 = (DefaultTableModel) jTable3.getModel();//SHOWING IN JTABLE
                        model1.addRow(new Object[]{rs.getString(1)});
                    }

                } catch (ClassNotFoundException | SQLException e) {
                    JOptionPane.showMessageDialog(null, e);

                }
            } else if (economy.isSelected()) {
                try {
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                    Connection connection = DriverManager
                            .getConnection(
                                    "jdbc:sqlserver://localhost:1971;databaseName=afly;selectMethod=cursor", "sa", "123456");
                    System.out.println("DATABASE NAME IS:"
                            + connection.getMetaData().getDatabaseProductName());
                    Statement statement = connection.createStatement();

                    //            int a = statement.executeUpdate("insert into Buyer values('" + BuyerId + "','" + FirstName + "','" + LastName + "' ,'" + Address + "','" + PassportNumber + "','" + PhoneNumber + "','" + Email + "','" + RequirementName + "')");//INSERT DATA
                    //          String query = "insert into Buyer values(?,?,?,?,?,?,?,?)";
                    String query = "select seatnumber from economyclass where airlineid= ? AND DEPARTURECITY=? AND DEPARTURETIME=? AND DEPARTUREDATE=? AND ARRIVALCITY=? ";
                    //String query="insert into selectticket values(?,?,?,?,?)";
                    PreparedStatement st = connection.prepareStatement(query);
                    st.setInt(1, AirlineId_1);
                    st.setString(2, DepartureCityName_);
                    st.setString(4, DepartureDate_);
                    st.setString(3, DepartureTime_);
                    st.setString(5, ArrivalCityName_);
                    //st.execute();
                    ResultSet rs = null;
                    rs = st.executeQuery();
                    while (rs.next()) {

                        DefaultTableModel model1 = (DefaultTableModel) jTable3.getModel();//SHOWING IN JTABLE
                        model1.addRow(new Object[]{rs.getString(1)});
                    }

                } catch (ClassNotFoundException | SQLException e) {
                    JOptionPane.showMessageDialog(null, e);

                }

            }

        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        String BuyerId=jTextField7.getText();
        int  BuyerId1=Integer.parseInt(BuyerId);

        String SeatNumber = null;

        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        int[] selection = jTable3.getSelectedRows();
        int a = selection.length;
        for (int i = 0; i < a; i++) {

            SeatNumber = model.getValueAt(selection[i], 0).toString();
            System.out.println(SeatNumber);
        }
        if (business.isSelected()) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager
                        .getConnection(
                                "jdbc:sqlserver://localhost:1971;databaseName=afly;selectMethod=cursor", "sa", "123456");
                System.out.println("DATABASE NAME IS:"
                        + connection.getMetaData().getDatabaseProductName());
                Statement statement = connection.createStatement();

                String query = "select airline.airlinename,businessclass.departurecity,businessclass.departuredate,businessclass.departuretime,businessclass.arrivalcity,businessclass.transitcity,businessclass.seatnumber from businessclass inner join airline on businessclass.airlineid=airline.airlineid where seatnumber=?";
                String query1 = "insert into bticket values(?,?,?,?,?,?,?,?)";
                String query2 = "delete from businessclass where departurecity=? AND departuretime=? AND arrivalcity=? AND seatnumber=? ";

                String airlinename, departurecity, departuredate, departuretime, arrivalcity, transitcity, seatnumber, airlineid;

                PreparedStatement st = connection.prepareStatement(query);

                st.setString(1, SeatNumber);

                //st.execute();
                ResultSet rs = null;
                rs = st.executeQuery();
                while (rs.next()) {
                    airlinename = rs.getString(1);
                    departurecity = rs.getString(2);
                    departuredate = rs.getString(3);
                    departuretime = rs.getString(4);
                    arrivalcity = rs.getString(5);
                    transitcity = rs.getString(6);
                    seatnumber = rs.getString(7);

                    PreparedStatement st1 = connection.prepareStatement(query1);
                    st1.setString(1, airlinename);
                    st1.setString(2, departurecity);

                    st1.setString(3, departuredate);

                    st1.setString(4, departuretime);
                    st1.setString(5, arrivalcity);
                    st1.setString(6, transitcity);
                    st1.setString(7, seatnumber);
                     st1.setInt(8, BuyerId1);
                    

                    st1.execute();

                    PreparedStatement st2 = connection.prepareStatement(query2);
                    // st1.setString(1, airlinename);
                    st2.setString(1, departurecity);

                    // st2.setString(2, departuredate);
                    st2.setString(2, departuretime);
                    st2.setString(3, arrivalcity);
                    //st2.setString(5, transitcity);
                    st2.setString(4, seatnumber);

                    st2.executeUpdate();

                    DefaultTableModel model1 = (DefaultTableModel) jTable4.getModel();//SHOWING IN JTABLE
                    model1.addRow(new Object[]{airlinename, departurecity, departuredate, departuretime, arrivalcity, transitcity, seatnumber});
                }

            } catch (Exception e) {
            }
        } else if (economy.isSelected()) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager
                        .getConnection(
                                "jdbc:sqlserver://localhost:1971;databaseName=afly;selectMethod=cursor", "sa", "123456");
                System.out.println("DATABASE NAME IS:"
                        + connection.getMetaData().getDatabaseProductName());
                Statement statement = connection.createStatement();

                String query = "select airline.airlinename,economyclass.departurecity,economyclass.departuredate,economyclass.departuretime,economyclass.arrivalcity,economyclass.transitcity,economyclass.seatnumber from economyclass inner join airline on economyclass.airlineid=airline.airlineid where seatnumber=?";
                String query1 = "insert into eticket values(?,?,?,?,?,?,?,?)";
                String query2 = "delete from economyclass where departurecity=? AND departuretime=? AND arrivalcity=? AND seatnumber=? ";

                String airlinename, departurecity, departuredate, departuretime, arrivalcity, transitcity, seatnumber;
                PreparedStatement st = connection.prepareStatement(query);

                st.setString(1, SeatNumber);

                //st.execute();
                ResultSet rs = null;
                rs = st.executeQuery();
                while (rs.next()) {
                    airlinename = rs.getString(1);
                    departurecity = rs.getString(2);
                    departuredate = rs.getString(3);
                    departuretime = rs.getString(4);
                    arrivalcity = rs.getString(5);
                    transitcity = rs.getString(6);
                    seatnumber = rs.getString(7);

                    PreparedStatement st1 = connection.prepareStatement(query1);
                    st1.setString(1, airlinename);
                    st1.setString(2, departurecity);

                    st1.setString(3, departuredate);

                    st1.setString(4, departuretime);
                    st1.setString(5, arrivalcity);
                    st1.setString(6, transitcity);
                    st1.setString(7, seatnumber);
                    st1.setInt(8, BuyerId1);

                    st1.execute();

                    PreparedStatement st2 = connection.prepareStatement(query2);
                    // st1.setString(1, airlinename);
                    st2.setString(1, departurecity);

                    // st2.setString(2, departuredate);
                    st2.setString(2, departuretime);
                    st2.setString(3, arrivalcity);
                    //st2.setString(5, transitcity);
                    st2.setString(4, seatnumber);

                    st2.executeUpdate();

                    DefaultTableModel model1 = (DefaultTableModel) jTable4.getModel();//SHOWING IN JTABLE
                    model1.addRow(new Object[]{airlinename, departurecity, departuredate, departuretime, arrivalcity, transitcity, seatnumber});
                }

            } catch (Exception e) {
            }
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Home().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchForFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchForFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchForFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchForFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchForFlight().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton business;
    private javax.swing.ButtonGroup classs_;
    private javax.swing.JRadioButton economy;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.ButtonGroup way;
    // End of variables declaration//GEN-END:variables
}
